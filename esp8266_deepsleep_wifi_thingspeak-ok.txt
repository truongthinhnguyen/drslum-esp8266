#include <DHT.h>
#include <ESP8266WiFi.h>
#include <Wire.h>
#include "DHT.h"

#define DHTPIN D2 
#define SOIL_MOIST_1_PIN A0
//#define DHTTYPE DHT21   // DHT 21 (AM2301)
#define DHTTYPE DHT11   // DHT 11
//#define DHTTYPE DHT22   // DHT 22  (AM2302), AM2321
DHT dht(DHTPIN, DHTTYPE);

float humi; 
float temp;

//WiFiSetting
const char* ssid      = "VIETTEL B1502";
const char* password  = "0984672555";

WiFiClient client;

//ThingSpeakSetting
const int channelID    = 1642597; // Enter Channel ID;
String writeAPIKey    = "MEYECQ4OREXM0UI8";
const char* server    = "api.thingspeak.com";

void connect() {
  WiFi.disconnect();
  delay(10);
  Serial.print("Connecting to ");
  Serial.println(ssid);
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("");
  Serial.print("NodeMcu connected to wifi...");
}

void thingConnect() {
  if (client.connect(server, 80)) {
    String body = "field1=" + String(temp, 1) + "&field2=" + String(humi, 1); // + "&field3=" + String(moist, 1);
    client.print("POST /update HTTP/1.1\n");
    client.print("Host: api.thingspeak.com\n");
    client.print("Connection: close\n");
    client.print("X-THINGSPEAKAPIKEY: " + writeAPIKey + "\n");
    client.print("Content-Type: application/x-www-form-urlencoded\n");
    client.print("Content-Length: ");
    client.print(body.length());
    client.print("\n\n");
    client.print(body);
    client.print("\n\n");
    Serial.println("uploaded to Thingspeak server....");
  }
  //client.stop();
}

void setup() {
  Serial.begin(115200);
  //Serial.setTimeout(2000);

  // Wait for serial to initialize.
  while(!Serial) { }
  
  Serial.println("device is in Wake up mode");
  dht.begin();
  temp   = dht.readTemperature();
  humi  = dht.readHumidity();
  Serial.printf("Temp: %sÂ°C - Hum: %s%%\r\n", String(temp, 1).c_str(), String(humi, 1).c_str());
  
  connect();
  thingConnect();

  // Deep sleep mode for 30 seconds, the ESP8266 wakes up by itself when GPIO 16 (D0 in NodeMCU board) is connected to the RESET pin
  //Serial.println("I'm awake, but I'm going into deep sleep mode for 30 seconds");
  ESP.deepSleep(15e6); 
  
  // Deep sleep mode until RESET pin is connected to a LOW signal (for example pushbutton or magnetic reed switch)
  //Serial.println("I'm awake, but I'm going into deep sleep mode until RESET pin is connected to a LOW signal");
  //ESP.deepSleep(0); 
}

void loop() {
}